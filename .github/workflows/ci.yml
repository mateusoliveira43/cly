name: Continuos Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * 1' # Every Monday at 00:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [
          "3.7",
          "3.8",
          "3.9",
          "3.10",
          "pypy-3.8"
        ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements/dev.txt"

      - name: Install Python dependencies
        # TODO fix problem
        run: |
          pip install coverage==6.4.1
          pip install -r requirements/dev.txt

      - name: Python test and coverage
        run: pytest

      - name: Save html coverage report
        if: ${{ always() && matrix.python-version == '3.10' }}
        uses: actions/upload-artifact@v2
        with:
          name: html-coverage-report
          path: tests/coverage-results/htmlcov/

      - name: Save xml coverage report
        if: ${{ matrix.python-version == '3.10' }}
        uses: actions/upload-artifact@v2
        with:
          name: xml-coverage-report
          path: tests/coverage-results/coverage.xml

      - name: Python type check
        run: mypy .

      - name: Python linter
        run: prospector .

      - name: Code format
        run: |
          isort --check --diff .
          black --check --diff .
          ec -verbose

      - name: Security vulnerability scan
        run: |
          bandit --recursive cli
          bandit --recursive example
          safety check --file requirements/dev.txt --full-report

      - name: Usage example
        run: |
          ./run_example.py --help
          ./run_example.py command1 --help

  docker-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: docker/Dockerfile

  sonarcloud:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use xml coverage report
        uses: actions/download-artifact@v2
        with:
          name: xml-coverage-report
          path: tests/coverage-results/

      - name: Change dir name for sonar
        run: sed -i 's*home/runner/work/python-cli-script-template/python-cli-script-template*github/workspace*g' tests/coverage-results/coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
